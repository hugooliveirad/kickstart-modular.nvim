-- NOTE: Plugins can also be configured to run Lua code when they are loaded.
--
-- This is often very useful to both group configuration, as well as handle
-- lazy loading plugins that don't need to be loaded immediately at startup.
--
-- For example, in the following configuration, we use:
--  event = 'VimEnter'
--
-- which loads which-key before all the UI elements are loaded. Events can be
-- normal autocommands events (`:help autocmd-events`).
--
-- Then, because we use the `config` key, the configuration only runs
-- after the plugin has been loaded:
--  config = function() ... end

return {
  --   { -- Useful plugin to show you pending keybinds.
  --     'folke/which-key.nvim',
  --     event = 'VimEnter', -- Sets the loading event to 'VimEnter'
  --     config = function() -- This is the function that runs, AFTER loading
  --       require('which-key').setup {
  --         plugins = {
  --           presets = {
  --             operators = false, -- adds help for operators like d, y, ...
  --             motions = false, -- adds help for motions
  --             text_objects = false, -- help for text objects triggered after entering an operator
  --             windows = false, -- default bindings on <c-w>
  --             nav = false, -- misc bindings to work with windows
  --             z = false, -- bindings for folds, spelling and others prefixed with z
  --             g = false, -- bindings for prefixed with g
  --           },
  --         },
  --       }
  --
  --       -- Document existing key chains
  --       require('which-key').register {
  --         ['<leader>c'] = { name = '[C]ode', _ = 'which_key_ignore' },
  --         ['<leader>d'] = { name = '[D]ocument', _ = 'which_key_ignore' },
  --         ['<leader>r'] = { name = '[R]ename', _ = 'which_key_ignore' },
  --         ['<leader>s'] = { name = '[S]earch', _ = 'which_key_ignore' },
  --         ['<leader>w'] = { name = '[W]orkspace', _ = 'which_key_ignore' },
  --       }
  --
  --       vim.keymap.set('n', '<leader>x', '<cmd>WhichKey<CR>', { desc = 'Which Key? [X]' })
  --     end,
  --   },
}
-- vim: ts=2 sts=2 sw=2 et
